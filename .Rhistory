usethis::create_package()
usethis::create_package(".")
library(httr)
# The only thing we have to change is the end of path that represents the dataset that we want.
url <- "http://datos.gob.es/apidata/catalog/dataset/a07002862-resultado-electoral-2003-informacion-complementaria2"
res <- content(GET(url))
raw_vec <- unlist(res$result$items[[1]]$distribution)
all_urls <- raw_vec[grepl("accessURL", names(raw_vec))]
head(read.csv2(all_urls))
?httr::build_url()
?httr::modify_url()
modify_url("http://datos.gob.es/apidata/catalog/dataset/")
modify_url("http://datos.gob.es/apidata/catalog/dataset/", path = "a07002862-resultado-electoral-2003-informacion-complementaria2")
modify_url
build_url
compose_url <- function(end_path) {
modify_url("http://datos.gob.es/apidata/catalog/dataset/", path = end_path)
}
# The only thing we have to change is the end of path that represents the dataset that we want.
url <- compose_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
res <- content(GET(url))
raw_vec <- unlist(res$result$items[[1]]$distribution)
all_urls <- raw_vec[grepl("accessURL", names(raw_vec))]
head(read.csv2(all_urls))
compose_url <- function(end_path) {
modify_url("http://datos.gob.es/apidata/catalog/dataset/", path = end_path)
}
# The only thing we have to change is the end of path that represents the dataset that we want.
url <- compose_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
url
compose_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
modify_url
parse_url
httr:::is.url(""http://datos.gob.es/apidata/catalog/dataset/"")
httr:::is.url("http://datos.gob.es/apidata/catalog/dataset/")
httr:::is.url
parse_url("http://datos.gob.es/apidata/catalog/dataset/")
build_url(parse_url("http://datos.gob.es/apidata/catalog/dataset/"))
compose_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
compose_url <- function(end_path) {
modify_url("http://datos.gob.es/apidata/catalog/dataset/", query = end_path)
}
compose_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
compose_url <- function(end_path) {
modify_url("http://datos.gob.es/apidata/catalog/dataset/", query = end_path)
}
# The only thing we have to change is the end of path that represents the dataset that we want.
url <- compose_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
res <- content(GET(url))
raw_vec <- unlist(res$result$items[[1]]$distribution)
# The only thing we have to change is the end of path that represents the dataset that we want.
url <- compose_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
url
?modify_url
compose_url <- function(end_path) {
modify_url("http://datos.gob.es/apidata/catalog/dataset/", scheme = end_path)
}
# The only thing we have to change is the end of path that represents the dataset that we want.
url <- compose_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
url
compose_url <- function(end_path) {
modify_url("http://datos.gob.es/apidata/catalog/dataset/", fragment = end_path)
}
# The only thing we have to change is the end of path that represents the dataset that we want.
url <- compose_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
url
res <- content(GET(url))
res
raw_vec <- unlist(res$result$items[[1]]$distribution)
make_url <- function(query, NULL) {
hostname <- "http://datos.gob.es/"
structure(
list(
scheme = "https",
hostname = hostname,
port = NULL,
path = query,
query = param,
params = NULL,
fragment = NULL,
username = NULL,
password = NULL),
class = "url")
}
make_url <- function(query, NULL) {
hostname <- "http://datos.gob.es/"
structure(
list(
scheme = "https",
hostname = hostname,
port = NULL,
path = query,
query = param,
params = NULL,
fragment = NULL,
username = NULL,
password = NULL),
class = "url"
)
}
make_url <- function(query) {
hostname <- "http://datos.gob.es/"
structure(
list(
scheme = "https",
hostname = hostname,
port = NULL,
path = query,
query = param,
params = NULL,
fragment = NULL,
username = NULL,
password = NULL),
class = "url"
)
}
make_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
make_url <- function(query, param = NULL) {
hostname <- "http://datos.gob.es/"
structure(
list(
scheme = "https",
hostname = hostname,
port = NULL,
path = query,
query = param,
params = NULL,
fragment = NULL,
username = NULL,
password = NULL),
class = "url"
)
}
make_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
make_url <- function(query, param = NULL) {
hostname <- "http://datos.gob.es/"
semi_url <-
structure(
list(
scheme = "https",
hostname = hostname,
port = NULL,
path = query,
query = param,
params = NULL,
fragment = NULL,
username = NULL,
password = NULL),
class = "url"
)
build_url(semi_url)
}
make_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
make_url <- function(query, param = NULL) {
hostname <- "http://datos.gob.es/apidata/catalog/dataset/"
semi_url <-
structure(
list(
scheme = "https",
hostname = hostname,
port = NULL,
path = query,
query = param,
params = NULL,
fragment = NULL,
username = NULL,
password = NULL),
class = "url"
)
build_url(semi_url)
}
make_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
make_url <- function(query, param = NULL) {
hostname <- "datos.gob.es/apidata/catalog/dataset"
semi_url <-
structure(
list(
scheme = "https",
hostname = hostname,
port = NULL,
path = query,
query = param,
params = NULL,
fragment = NULL,
username = NULL,
password = NULL),
class = "url"
)
build_url(semi_url)
}
make_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
# The only thing we have to change is the end of path that represents the dataset that we want.
url <- compose_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
res <- content(GET(url))
raw_vec <- unlist(res$result$items[[1]]$distribution)
res
?content
res <- content(GET(url), as = 'parsed')
url
build_url
query <- "a07002862-resultado-electoral-2003-informacion-complementaria2"
hostname <- "datos.gob.es/apidata/catalog/dataset"
semi_url <-
structure(
list(
scheme = "https",
hostname = hostname,
port = NULL,
path = query,
query = param,
params = NULL,
fragment = NULL,
username = NULL,
password = NULL),
class = "url"
)
param = NULL
semi_url <-
structure(
list(
scheme = "https",
hostname = hostname,
port = NULL,
path = query,
query = param,
params = NULL,
fragment = NULL,
username = NULL,
password = NULL),
class = "url"
)
semi_url
build_url(semi_url)
library(httr)
make_url <- function(query, param = NULL) {
hostname <- "datos.gob.es/apidata/catalog/dataset"
semi_url <-
structure(
list(
scheme = "https",
hostname = hostname,
port = NULL,
path = query,
query = param,
params = NULL,
fragment = NULL,
username = NULL,
password = NULL),
class = "url"
)
build_url(semi_url)
}
make_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
res <- content(GET(url), as = 'parsed')
GET(url)
url
datos_url <- make_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
res <- content(GET(url), as = 'parsed')
res <- content(GET(datos_url), as = 'parsed')
res
raw_vec <- unlist(res$result$items[[1]]$distribution)
all_urls <- raw_vec[grepl("accessURL", names(raw_vec))]
head(read.csv2(all_urls))
hostname <- "datos.gob.es/apidata/catalog/dataset"
query
"a07002862-resultado-electoral-2003-informacion-complementaria2"
query <- "a07002862-resultado-electoral-2003-informacion-complementaria2"
modify_url(hostname, scheme = "https", path = query)
hostname
modify_url
parse_url(hostname)
make_url <- function(query, param = NULL) {
hostname <- "datos.gob.es/apidata/catalog/dataset"
semi_url <-
structure(
list(
scheme = "https",
hostname = hostname,
port = NULL,
path = query,
query = param,
params = NULL,
fragment = NULL,
username = NULL,
password = NULL),
class = "url"
)
build_url(semi_url)
}
make_url <- function(query_path, param = NULL) {
hostname <- "datos.gob.es/apidata/catalog/dataset"
semi_url <-
structure(
list(
scheme = "https",
hostname = hostname,
port = NULL,
path = query_path,
query = param,
params = NULL,
fragment = NULL,
username = NULL,
password = NULL),
class = "url"
)
build_url(semi_url)
}
make_url <- function(query_path, param = NULL, ...) {
hostname <- "datos.gob.es/apidata/catalog/dataset"
# We could simply just paste together the URL
# but `httr` has better handling for
# character vectors of class url
# that deal with the structure of URL's
# more properly than I would know.
semi_url <-
structure(
list(
scheme = "https",
hostname = hostname,
path = query_path,
query = param,
...),
class = "url"
)
build_url(semi_url)
}
datos_url <- make_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
res <- content(GET(datos_url), as = 'parsed')
raw_vec <- unlist(res$result$items[[1]]$distribution)
all_urls <- raw_vec[grepl("accessURL", names(raw_vec))]
read(all_urls)
?httr::modify_url()
?httr::build_url
devtools::load_all(".")
devtools::load_all(".")
library(httr)
# Run this until we ahve the package structure
# When we have it we can just run devtools::load_all()
# or CTRL + SHIFT + L in Windows
source("./R/utils.R")
datos_url <- make_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
res <- content(GET(datos_url), as = 'parsed')
datos_url <- make_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
res <- content(get_resp(datos_url), as = 'parsed')
raw_vec <- unlist(res$result$items[[1]]$distribution)
all_urls <- raw_vec[grepl("accessURL", names(raw_vec))]
read(all_urls)
library(readr)
# Run this until we ahve the package structure
# When we have it we can just run devtools::load_all()
# or CTRL + SHIFT + L in Windows
source("./R/utils.R")
datos_url <- make_url("a07002862-resultado-electoral-2003-informacion-complementaria2")
res <- content(get_resp(datos_url), as = 'parsed')
res <- content(get_resp(datos_url), as = 'parsed')
raw_vec <- unlist(res$result$items[[1]]$distribution)
all_urls <- raw_vec[grepl("accessURL", names(raw_vec))]
all_urls
read_delim(all_urls, delim = ";")
read.csv2(all_urls, delim = ";")
read.csv2(all_urls)
?read_csv2
read_csv2
read.csv2
?read.csv2
read_csv2(all_urls)
read_csv2(all_urls, locale = locale(encoding = "Latin"))
read_csv2(all_urls, locale = locale(encoding = "Latin-1"))
read_csv2(all_urls, locale = locale(encoding = "Latin1"))
nrow(read.csv2(all_urls, locale = locale(encoding = "Latin1")))
nrow(read.csv2(all_urls))
read_csv2(all_urls, locale = locale(encoding = "Latin1"))
problems
problems()
read_csv2(all_urls, locale = locale(encoding = "Latin1"))
ncol(read.csv2(all_urls))
